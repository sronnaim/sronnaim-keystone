name: 🚀 Deploy to Alibaba Cloud ECS Instance
on:
  push:
    branches:
      - main
  pull_request: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  actions: write
  contents: read
jobs:
  build:
    name: 🛠 Build
    runs-on: ubuntu-22.04
    steps:
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v4
    - name: 🐳 Set up Docker Buildx 
      uses: docker/setup-buildx-action@v3
    - name: 🐳 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.CONTAINER_NAME }}:latest
  deploy:
    name: 🚀 Deploy to ECS
    runs-on: ubuntu-22.04
    needs: [build]
    steps: 
      - name: 📥 Install SSH client
        run: sudo apt-get install -y openssh-client
      - name: 🔑 Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ECS_PRIVATE_KEY }}
      
      - name: 🚀 Deploy to ECS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.ECS_USER }}@${{ vars.ECS_HOST }} "
            sudo docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.CONTAINER_NAME }}:latest
            sudo docker stop ${{ vars.CONTAINER_NAME }} 2>/dev/null || true
            sudo docker rm ${{ vars.CONTAINER_NAME }} 2>/dev/null || true
            sudo docker run -d -p ${{ vars.HOST_PORT }}:${{ vars.APP_PORT }} \\
              --name ${{ vars.CONTAINER_NAME }} \\
              -e NODE_ENV=production \\
              -e DATABASE_URL=\"${{ secrets.DATABASE_URL }}\" \\
              -e SESSION_SECRET=\"${{ secrets.SESSION_SECRET }}\" \\
              -e FRONTEND_URL=\"${{ vars.FRONTEND_URL }}\" \\
              -e CLOUDINARY_CLOUD_NAME=\"${{ secrets.CLOUDINARY_CLOUD_NAME }}\" \\
              -e CLOUDINARY_KEY=\"${{ secrets.CLOUDINARY_KEY }}\" \\
              -e CLOUDINARY_SECRET=\"${{ secrets.CLOUDINARY_SECRET }}\" \\
              -e APP_PORT=\"${{ vars.APP_PORT }}\" \\
              ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.CONTAINER_NAME }}:latest
            sudo docker image prune -f
          "